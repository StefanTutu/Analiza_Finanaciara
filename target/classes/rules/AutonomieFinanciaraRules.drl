//created on: Nov 18, 2017
package rules

//list any import classes here.
import main.java.AutonomieFinanciara.*;
import com.sample.*;
import java.util.*;

//declare any global variables here

rule "Exista posibilitatea de a calcula rata stabilitatii financiare "

    when
        i: IndicatorFinanciar(conturiCapitalPermanent.size()>0, conturiPasivTotal.size()>0)
    then
        RataStabilitatiFinanciare r = new RataStabilitatiFinanciare(i);
        r.setValoareRataStabilitatiiFinanciare();
       		insert(r);
       		System.out.println("11. Exista posibilitatea de a calcula rata stabilitatii financiare");
    		System.out.println("Suma conturilor capitalulul permanent : "+calculSuma(i.getConturiCapitalPermanent()));
    		System.out.println("Suma conturilor de pasiv total: "+calculSuma(i.getConturiPasivTotal()));
end

rule "Rata stabilitatii financiare este slaba"
    when
     i: IndicatorFinanciar() and 
     r: RataStabilitatiFinanciare(indicatorFinanciar == i, ValoareRataStabilitatiiFinanciare<1/3 )
    then
    r.setTip(TipAutonomie.SLABA);
    System.out.println("12. Rata stabilitatii financiare este SLABA, valoarea fiind "+r.getValoareRataStabilitatiiFinanciare());
end


rule "Rata stabilitatii financiare este medie"
    when
     i: IndicatorFinanciar() and 
     r: RataStabilitatiFinanciare(indicatorFinanciar == i, ValoareRataStabilitatiiFinanciare==1/3 )
    then
    r.setTip(TipAutonomie.MEDIE);
    System.out.println("12. Rata stabilitatii financiare este MEDIE, valoarea fiind "+r.getValoareRataStabilitatiiFinanciare());
end

rule "Rata stabilitatii financiare este buna"
    when
     i: IndicatorFinanciar() and 
     r: RataStabilitatiFinanciare(indicatorFinanciar == i, ValoareRataStabilitatiiFinanciare>1/3 )
    then
    r.setTip(TipAutonomie.BUNA);
    System.out.println("12. Rata stabilitatii financiare este BUNA, valoarea fiind "+r.getValoareRataStabilitatiiFinanciare());
end

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


rule "Exista posibilitatea de a calcula rata autonomiei financiare globale "

    when
        i: IndicatorFinanciar(conturiCapitalPropriu.size()>0, conturiPasivTotal.size()>0)
    then
        RataAutonomieiFinanciareGlobale r = new RataAutonomieiFinanciareGlobale(i);
        r.setValoareRataAutonomieiFinanciareGlobale();
       		insert(r);
       		System.out.println("13. Exista posibilitatea de a calcula rata autonomiei financiare globale");
    		System.out.println("Suma conturilor capitalulul propriu : "+calculSuma(i.getConturiCapitalPropriu()));
    		System.out.println("Suma conturilor de pasiv total: "+calculSuma(i.getConturiPasivTotal()));
end

rule "Rata autonomiei financiare globale este slaba"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareGlobale(indicatorFinanciar == i, valoareRataAutonomieiFinanciareGlobale<1/3 )
    then
    r.setTip(TipAutonomie.SLABA);
    System.out.println("14. Rata autonomiei financiare globale este SLABA, valoarea fiind "+r.getValoareRataAutonomieiFinanciareGlobale());
end


rule "Rata autonomiei financiare globale este medie"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareGlobale(indicatorFinanciar == i, valoareRataAutonomieiFinanciareGlobale==1/3 )
    then
    r.setTip(TipAutonomie.MEDIE);
    System.out.println("14. Rata autonomiei financiare globale este MEDIE, valoarea fiind "+r.getValoareRataAutonomieiFinanciareGlobale());
end

rule "Rata autonomiei financiare globale este buna"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareGlobale(indicatorFinanciar == i, valoareRataAutonomieiFinanciareGlobale>1/3 )
    then
    r.setTip(TipAutonomie.BUNA);
    System.out.println("14. Rata autonomiei financiare globale este BUNA, valoarea fiind "+r.getValoareRataAutonomieiFinanciareGlobale());
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


rule "Exista posibilitatea de a calcula rata autonomiei financiare la termen prin formula 1"

    when
        i: IndicatorFinanciar(conturiCapitalPropriu.size()>0, conturiCapitalPermanent.size()>0)
    then
        RataAutonomieiFinanciareLaTermen r = new RataAutonomieiFinanciareLaTermen(i);
        r.setValaoreRataAutomieiFinanciareLaTermen1();
       		insert(r);
       		System.out.println("15. Exista posibilitatea de a calcula rata autonomiei financiare la termen prin formula 1");
    		System.out.println("Suma conturilor capitalulul propriu : "+calculSuma(i.getConturiCapitalPropriu()));
    		System.out.println("Suma conturilor de capital permanent: "+calculSuma(i.getConturiCapitalPermanent()));
end

rule "Rata autonomiei financiare la termen prin formula 1 este slaba"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareLaTermen(indicatorFinanciar == i, valaoreRataAutomieiFinanciareLaTermen<1/2 )
    then
    r.setTip(TipAutonomie.SLABA);
    System.out.println("16. Rata autonomiei financiare la termen prin formula 1 este SLABA, valoarea fiind "+r.getValaoreRataAutomieiFinanciareLaTermen());
end


rule "Rata autonomiei financiare la termen prin formula 1 este medie"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareLaTermen(indicatorFinanciar == i, valaoreRataAutomieiFinanciareLaTermen==1/2 )
    then
    r.setTip(TipAutonomie.MEDIE);
    System.out.println("16. Rata autonomiei financiare la termen prin formula 1 este MEDIE, valoarea fiind "+r.getValaoreRataAutomieiFinanciareLaTermen());
end

rule "Rata autonomiei financiare la termen prin formula 1 este buna"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareLaTermen(indicatorFinanciar == i, valaoreRataAutomieiFinanciareLaTermen>1/2 )
    then
    r.setTip(TipAutonomie.BUNA);
    System.out.println("16. Rata stabilitatii financiare la termen prin formula 1 este BUNA, valoarea fiind "+r.getValaoreRataAutomieiFinanciareLaTermen());
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Exista posibilitatea de a calcula rata autonomiei financiare la termen prin formula 2"

    when
        i: IndicatorFinanciar(conturiCapitalPropriu.size()>0, conturiDatoriiPeTermenLung.size()>0)
    then
        RataAutonomieiFinanciareLaTermen r = new RataAutonomieiFinanciareLaTermen(i);
        r.setValaoreRataAutomieiFinanciareLaTermen2();
       		insert(r);
       		System.out.println("17. Exista posibilitatea de a calcula rata autonomiei financiare la termen prin formula 2");
    		System.out.println("Suma conturilor capitalulul propriu : "+calculSuma(i.getConturiCapitalPropriu()));
    		System.out.println("Suma conturilor datorii pe termen lung: "+calculSuma(i.getConturiDatoriiPeTermenLung()));
end

rule "Rata autonomiei financiare la termen prin formula 2 este slaba"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareLaTermen(indicatorFinanciar == i, valaoreRataAutomieiFinanciareLaTermen<1)
    then
    r.setTip(TipAutonomie.SLABA);
    System.out.println("18. Rata autonomiei financiare la termen prin formula 2 este SLABA, valoarea fiind "+r.getValaoreRataAutomieiFinanciareLaTermen());
end


rule "Rata autonomiei financiare la termen prin formula 2 este medie"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareLaTermen(indicatorFinanciar == i, valaoreRataAutomieiFinanciareLaTermen==1 )
    then
    r.setTip(TipAutonomie.MEDIE);
    System.out.println("18. Rata autonomiei financiare la termen prin formula 2 este MEDIE, valoarea fiind "+r.getValaoreRataAutomieiFinanciareLaTermen());
end

rule "Rata autonomiei financiare la termen prin formula 2 este buna"
    when
     i: IndicatorFinanciar() and 
     r: RataAutonomieiFinanciareLaTermen(indicatorFinanciar == i, valaoreRataAutomieiFinanciareLaTermen>1 )
    then
    r.setTip(TipAutonomie.BUNA);
    System.out.println("18. Rata stabilitatii financiare la termen prin formula 2 este BUNA, valoarea fiind "+r.getValaoreRataAutomieiFinanciareLaTermen());
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


rule "Exista posibilitatea de a calcula rata datoriilor pe termen scurt"

    when
        i: IndicatorFinanciar(conturiDatoriiPeTermenLung.size()>0, conturiPasivTotal.size()>0)
    then
        RataDatoriilorPeTermenScurt r = new RataDatoriilorPeTermenScurt(i);
        r.setValaoreRataDatoriilorPeTermenScurt();
       		insert(r);
       		System.out.println("19. Exista posibilitatea de a calcula rata datoriilor pe termen scurt");
    		System.out.println("Suma conturilor de datorii pe termen lung : "+calculSuma(i.getConturiDatoriiPeTermenLung()));
    		System.out.println("Suma conturilor de pasiv total: "+calculSuma(i.getConturiPasivTotal()));
end

rule "Rata datoriilor pe termen scurt este slaba"
    when
     i: IndicatorFinanciar() and 
     r: RataDatoriilorPeTermenScurt(indicatorFinanciar == i, valaoreRataDatoriilorPeTermenScurt>1)
    then
    r.setTip(TipAutonomie.SLABA);
    System.out.println("20. Rata datoriilor pe termen scurt este SLABA, valoarea fiind "+r.getValaoreRataDatoriilorPeTermenScurt());
end


rule "Rata datoriilor pe termen scurt este medie"
    when
     i: IndicatorFinanciar() and 
     r: RataDatoriilorPeTermenScurt(indicatorFinanciar == i, valaoreRataDatoriilorPeTermenScurt==1 )
    then
    r.setTip(TipAutonomie.MEDIE);
    System.out.println("20. Rata datoriilor pe termen scurt este MEDIE, valoarea fiind "+r.getValaoreRataDatoriilorPeTermenScurt());
end

rule "Rata datoriilor pe termen scurt este buna"
    when
     i: IndicatorFinanciar() and 
     r: RataDatoriilorPeTermenScurt(indicatorFinanciar == i, valaoreRataDatoriilorPeTermenScurt<1 )
    then
    r.setTip(TipAutonomie.BUNA);
    System.out.println("20. Rata datoriilor pe termen scurt este BUNA, valoarea fiind "+r.getValaoreRataDatoriilorPeTermenScurt());
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


rule "Exista posibilitatea de a calcula rata de indatorare globala"

    when
        i: IndicatorFinanciar(conturiTotalDatorii.size()>0, conturiPasivTotal.size()>0)
    then
        RataDeIndatorareGobale r = new RataDeIndatorareGobale(i);
        r.setValaoreRataDeIndatorareGobale();
       		insert(r);
       		System.out.println("21. Exista posibilitatea de a calcula rata de indatorare globala");
    		System.out.println("Suma conturilor de datorii pe termen lung : "+calculSuma(i.getConturiTotalDatorii()));
    		System.out.println("Suma conturilor de pasiv total: "+calculSuma(i.getConturiPasivTotal()));
end

rule "Rata de indatorare globala este slaba"
    when
     i: IndicatorFinanciar() and 
     r: RataDeIndatorareGobale(indicatorFinanciar == i, valaoreRataDeIndatorareGobale>1)
    then
    r.setTip(TipAutonomie.SLABA);
    System.out.println("22. Rata de indatorare globala este SLABA, valoarea fiind "+r.getValaoreRataDeIndatorareGobale());
end


rule "Rata de indatorare globala este medie"
    when
     i: IndicatorFinanciar() and 
     r: RataDeIndatorareGobale(indicatorFinanciar == i, valaoreRataDeIndatorareGobale==1 )
    then
    r.setTip(TipAutonomie.MEDIE);
    System.out.println("22. Rata de indatorare globala este MEDIE, valoarea fiind "+r.getValaoreRataDeIndatorareGobale());
end

rule "Rata de indatorare globala scurt este buna"
    when
     i: IndicatorFinanciar() and 
     r: RataDeIndatorareGobale(indicatorFinanciar == i, valaoreRataDeIndatorareGobale<1 )
    then
    r.setTip(TipAutonomie.BUNA);
    System.out.println("22. Rata de indatorare globala este BUNA, valoarea fiind "+r.getValaoreRataDeIndatorareGobale());
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


function double calculSuma(List listaConturi){
	double suma=0.0;
    for(Object c:listaConturi){
    	suma+=((ContClient)c).getSuma();
   	}
   	
   	return suma;
}